/* 题目
*     成绩排序
*  描述
*     有 n 名学生，它们的学号分别是 1,2,…,n。这些学生都选修了邓老师的算法训练营、数据结构训练营这两门课程。
*     学期结束了，所有学生的课程总评都已公布，所有总评分数都是 [0,100] 之间的整数。巧合的是，不存在两位同学，
他们这两门课的成绩都完全相同。邓老师希望将这些所有的学生按这两门课程的总分进行降序排序，特别地，如果两位同学
的总分相同，那邓老师希望把算法训练营得分更高的同学排在前面。由于上面提到的巧合，所以，这样排名就可以保证没有
并列的同学了。
*     邓老师将这个排序任务交给了他的助教。可是粗心的助教没有理解邓老师的要求，将所有学生按学号进行了排序。
*     邓老师希望知道，助教的排序结果中，存在多少逆序对。
*     如果对于两个学生 (i,j) 而言，i 被排在了 j 前面，并且i 本应被排在 j 的后面，我们就称 (i,j) 是一个逆序对。
*     请你先帮邓老师把所有学生按正确的顺序进行排名，再告诉他助教的错误排名中逆序对的数目。
*  输入格式
*     第一行一个整数 n，表示学生的个数。
*     第 2 行到第 n+1 行，每行 2 个用空格隔开的非负整数，第 i+1 行的两个数依次表示学号为 i 的同学的算法训练营、
数据结构训练营的总评成绩。
*  输出格式
*     输出包含 n+1 行。
*     前 n 行表示正确的排序结果，每行 4 个用空格隔开的整数，第 i 行的数依次表示排名为 i 的同学的学号、总分、
算法训练营成绩、数据结构训练营成绩。
*     第 n+1 行一个整数，表示助教的错误排名中逆序对的数目。
*  样例输入
*     3
*     95 85
*     90 90
*     100 99
*  样例输出
*     3 199 100 99
*     1 180 95 85
*     2 180 90 90
*     2
*  样例解释
*     学号为 3 的同学总分为 199，是最高的，所以他应该排第一名。
*     学号为 1 的同学虽然总分与学号为 2 的同学一致，但是他的算法训练营成绩更高，所以在排名规则下更胜一筹。
*     原错误排名中的逆序对数目为 2 ，这些逆序对分别为 (1,3) 和 (2,3)。
*  数据范围
*     对于 25% 的数据，保证 n=3。
*     对于 50% 的数据，保证 n≤10。
*     对于另外 25% 的数据，保证所有同学的总分两两不同。
*     对于 100% 的数据，保证 n≤5,000 ，且保证不存在成绩完全相同的学生。
*  时间限制：10 sec
*  空间限制：256 MB
*  提示
*     [可以使用起泡排序将所有学生进行排名。]
*     [善良的助教提醒你，在起泡排序的过程中，每次交换都会使逆序对数目减少 1 哦！想一想，为什么？]
*     [聪明的助教还告诉你，这道题可以设计出时间复杂度为 O(nlogn) 的算法。这会在今后的课程中涉及到。]
*  我的思路
*     从样例输出可以看出，助教是按照学号做升序排序的，也就是说，相当于没排序。那么这道题可以抽象为
将输入数据做排序，创建一个结构体，包含学号、总成绩、两门课成绩，然后按照要求进行排序即可。逆序对其实
就是冒泡排序中交换位置的次数。如果直接用优化后的冒泡排序，就可以通过一次排序直接把准确的顺序和逆序对
都求出来。
*  问题
*     用优化后的冒泡排序，时间复杂度也是O(n^2)，什么算法能达到O(nlogn)？堆排序虽然可以保证时间复杂度
是这个，但是无法通过堆排序的过程直接把所有逆序对的个数求出来；用快排也不行，无法准确的在一次排序中求出
所有的逆序对。
*/